/*
 * generated by Xtext
 */
package org.eclipsecon.expdsl.validation

import com.google.inject.Inject
import org.eclipse.xtext.validation.Check
import org.eclipsecon.expdsl.expressions.VariableRef
import org.eclipsecon.expdsl.util.ExpressionsModelUtil

import static org.eclipsecon.expdsl.expressions.ExpressionsPackage.Literals.*

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ExpressionsValidator extends AbstractExpressionsValidator {

	public static val FORWARD_REFERENCE = "org.eclipsecon.expdsl.ForwardReference";

	@Inject extension ExpressionsModelUtil

	@Check
	def void checkForwardReference(VariableRef varRef) {
		val variable = varRef.getVariable()
		if (!varRef.variablesDefinedBefore.contains(variable)) {
			error("variable forward reference not allowed: '"
					+ variable.name + "'",
				VARIABLE_REF__VARIABLE, // where to put the error marker
				FORWARD_REFERENCE
			)
		}
	}
}
